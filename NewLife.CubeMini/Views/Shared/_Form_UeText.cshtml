@model EntityField
@using NewLife;
@using NewLife.Cube
@using XCode;
@using XCode.Configuration;
@{
    var entity = Model.Entity;
    var field = Model.Field;

    var err = 0;
    if (ViewData.ModelState.TryGetValue(field.Name, out var st) && st != null)
    {
        err = st.Errors.Count;
    }

    var des = field.Description.TrimStart(field.DisplayName).TrimStart(",", ".", "，", "。");
}
@if (err > 0)
{
    <span class="col-xs-12 alert alert-danger">
        @Html.ValidationMessage(field.Name)
    </span>
}
<label class="control-label col-xs-12 col-sm-2">
    @field.DisplayName
    @if (!des.IsNullOrEmpty())
    {
        <br/>@des
    }
</label>

<div class="input-group col-xs-12 col-sm-10">
    @if (field.ReadOnly)
    {
        var row = (Int32)Math.Round(field.Length / 100d);
        if (row < 3) row = 3;
        @*<label class="form-control">@entity[field.Name]</label>*@
        <textarea class="form-control" id="@field.Name" rows="@row" readonly>@entity[field.Name]</textarea>
    }
    else
    {
        <script id="editor" name="@field.Name" type="text/plain" style="width:100%;height:400px;">
             @Html.Raw(entity[field.Name]?.ToString() ?? "")
        </script>

        <script>  var ue = UE.getEditor('editor', {
                serverUrl: '/ueditor/exec'
            });
        </script>
    }
</div>